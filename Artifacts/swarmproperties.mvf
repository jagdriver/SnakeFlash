#  swarmproperties.mvf
#
# WaveSnake Swarm Properties
#
#
# properties must be set and valid.
#
PROMPT="YES"

# You can change the Node name prefix here. Node names are generated
# as NODENAME_PREFIX + "0" + NODENAME_COUNT, e.g. sn01, sn02 ...
# The Swarm manager node will always be the first node.
#
NODENAME_PREFIX="sn"
PROPERTY_FILE_NAME="swarmproperties"
PROPERTY_FILE_EXT="mvf"
MANAGER_TEMPLATE_FILE_NAME="managertemplate"
WORKER_TEMPLATE_FILE_NAME="workertemplate"
TEMPLATE_FILE_EXT="yaml"

# Number of node's in the Swarm, max 4.
NODENAME_COUNT="4"

# Set the internal Swarm IP net.
#INTERNAL_SWARM_IP_NET="192.168.230.0"

# --- New Properties section

# MANAGER Properties
MANAGER_NAME="manager"
MANAGER_PASSWORD="your-manager-password"
MANAGER_EMAIL="manager@swarm.local"
# OBS Below causes edit error, ends up with manager: in front
# MANAGER_ENCRYPTED_PASSWORD="$6$rounds=4096$mEbQNjWkU$D1RJw5siBTJxj36F8yhkgTWI/Djj/3zbdA1lXRxe6Po6lnTFsoY9bX0Xw1c4CSxbyihl1/4GARAJdUc9b.yea."
# Node properties
SWARM_LOCALE="en_US.UTF-8"
TIME_ZONE="Europe/Copenhagen"
#AUTHORIZED_SSH_KEY="ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCAFXvy02GBzezVDv1S2peQHR6O67yJ3eqkg5+blxSkW0y2gGBjMx02tvB5yGu6IFMXlQIX/G9phCZOktnwOPlo= nielsjorgennielsen@snakemacpro.local"
SWARM_SECRET="This is a secret string used to generate user tokens"
# Docker Swarm properties
SWARM_MANAGER_NODE="sn01"
SWARM_PORT="2377"
SWARM_INTERFACE="eth0"
#SWARM_WORKER_TOKEN="SWMTKN-1-6cyk7y11vbx3e8sc5b8iqiao7sb9iyr8b2lheybtyjqhb8mfho-5bracqtjvzt2zcn7m0qp5w27w"
#SWARM_MANAGER_TOKEN="SWMTKN-1-6cyk7y11vbx3e8sc5b8iqiao7sb9iyr8b2lheybtyjqhb8mfho-cgxcsuzfarwy7m3eypj542pi1"

# Swarm Application DNS Prefix's
API_PREFIX="api"
DB_PREFIX="sql"
MQTT_PREFIX="mqt"
SKETCH_PREFIX="sketch"

# WiFi properties
COUNTRY_CODE="DK"
WIFI_SSID="Your WiFi ssid"
WIFI_PASSWD="Your WiFi password"

# Swarm Node ETH0 properties
ETH0_NETWORK_ADDRESS="172.16.1.0"
ETH0_NETWORK_NETMASK="255.255.255.0"
ETH0_IP_ADDRESS="172.16.1.1"
ETH0_STATIC_ROUTERS="172.16.1.1"
ETH0_DNS_SERVERS="8.8.8.8 8.8.4.4"

# Swarm Application placement, allowed values [ NodeName | all ]
# Here you decite on which node applications will be deployed
#
REDIS_APP_PLACEMENT="sn01"
PORTAINER_APP_PLACEMENT="sn01"
TRAEFIK_APP_PLACEMENT="sn01"
MOSQUITTO_APP_PLACEMENT="sn01"
SNAKECONFIG_APP_PLACEMENT="sn01"
SNAKEHOME_APP_PLACEMENT="sn01"
SNAKEAPI_APP_PLACEMENT="sn01"
SNAKECONSOLE_APP_PLACEMENT="sn01"
SNAKEHISTORY_APP_PLACEMENT="sn01"
SNAKERULE_APP_PLACEMENT="sn01"
SNAKETIMER_APP_PLACEMENT="sn01"
SNAKEUTIL_APP_PLACEMENT="all"

# Manager Node WLAN0 default properties
# Change the WLAN0 address here. The script auto detects the current lan
# address, so you just set the last byte of the IP address. Preferrably
# a value > 200, so we don't interfere with DHCP leases.
WLAN0_NETWORK_ADDRESS="192.168.1.0"
WLAN0_NETWORK_NETMASK="255.255.255.0"
WLAN0_IP_ADDRESS="192.168.1.230"
WLAN0_STATIC_ROUTERS="192.168.1.1"
WLAN0_DNS_SERVERS="8.8.8.8 8.8.4.4"

# Domain properties
EXTERNAL_DOMAIN_NAME="external.domain"

# SSH Properties
SSH_KEY_FILE="id_ecdsa"

# Dynamic DNS Providers !OBS We need a list of URL's on which to set the dynamic IP. 
DNS_PROVIDER_LIST="GratisDNS CloudFlare OneCom"
DNS_PROVIDER_URL_LIST="https://admin.gratisdns.com/ddns.php https://cloudflare.com https://onecom.com"
DYNAMIC_DNS_PROVIDER=""

# GratisDNS Dynamic DNS properties
DYNAMIC_DNS_USER="jagdriver"
DYNAMIC_DNS_PASSWD="32a88235d7dfb08e11"

# CloudFlare Dynamic DNS properties
DDNS_EMAIL="CLOUDFLARE ACCOUNT EMAIL ADDRESS"
DDNS_API_TOKEN="CLOUDFLARE GLOBAL API KEY"
DDNS_DOMAIN="example.com"
DDNS_HOSTNAME="dynamic"

# Let's Encrypt ACME properties
ACME_EMAIL_ADDRESS="yourmail@mailserver.com"

# Global Application properties
APPLICATION_LOG_PATH="/var/log/snakelogs/"
SNAKEUTIL_LOG_FILE="snakeutil.log"
SNAKEAPI_LOG_FILE="snakeapi.log"
SNAKEHISTORY_LOG_FILE="snakehistory.log"
SNAKECONFIG_LOG_FILE="snakeconfig.log"
SNAKETIMER_LOG_FILE="snaketimer.log"
SNAKECONSOLE_LOG_FILE="snakeconsole.log"
SWARM_MAIL_USER="wavesnakeapi@gmail.com"
SWARM_MAIL_SUBJECT="Wavesnake API Account"
SWARM_MAIL_BODY="This is your new SnakeApi account"
SWARM_MAIL_PATH="/tmp/mail/msg.txt"
GLOBAL_CONFIG_PATH="/opt/containers/configuration/globalconfig.json"

# Traefik properties
TRAEFIK_ENTRYPOINT_ADDRESS="192.168.1.230"
# Traefik Application Ports
# External port will always be 80
MQTT_INTERNAL_TCP_PORT="8213"
MQTT_EXTERNAL_TCP_PORT="8210"

# Portainer properties
PORTAINER_SERVER_ADDRESS="192.168.1.230"
PORTAINER_SERVER_PORT="9000"

# SnakeApi properties
SNAKEAPI_VERSION="1.2.0"
API_SERVER_ADDRESS="api.wavesnake.local"
API_SERVER_PORT="80"
#ACCESSORY_SERVICES='[ { \"Id\":0, \"ServiceId\":0, \"Type\":\"Temperature\", \"Description\":\"Temperature in degree Celsius\", \"Value\":\"\", \"Range\":\"-40;+50\", \"Unit\":\"3\" }, { \"Id\":0, \"ServiceId\":0, \"Type\":\"Humidity\", \"Description\":\"Humidity i percentage\", \"Value\":\"\", \"Range\":\"0;100\", \"Unit\":\"1\" }, { \"Id\":0, \"ServiceId\":0, \"Type\":\"OpenClose\", \"Description\":\"State Open/Closed\", \"Value\":\"\", \"Range\":\"0;1\", \"Unit\":\"5\" }, { \"Id\":0, \"ServiceId\":0, \"Type\":\"OnOff\", \"Description\":\"State On/Off\", \"Value\":\"\", \"Range\":\"0;1\", \"Unit\":\"5\" }, { \"Id\":0, \"ServiceId\":0, \"Type\":\"Sketch\", \"Description\":\"Sketch Version\", \"Value\":\"\", \"Range\":\"*\", \"Unit\":\"4\" }, { \"Id\":0, \"ServiceId\":0, \"Type\":\"UpTime\", \"Description\":\"Accessory Uptime\", \"Value\":\"\", \"Range\":\"5000;3600000\", \"Unit\":\"2\" } ]'
#ACCESSORY_SERVICES='[ { "Id":0, "ServiceId":0, "Type":"Temperature", "Description":"Temperature in degree Celsius", "Value":"", "Range":"-40;+50", "Unit":"3" }, { "Id":0, "ServiceId":0, "Type":"Humidity", "Description":"Humidity i percentage", "Value":"", "Range":"0;100", "Unit":"1" }, { "Id":0, "ServiceId":0, "Type":"OpenClose", "Description":"State Open/Closed", "Value":"", "Range":"0;1", "Unit":"5" }, { "Id":0, "ServiceId":0, "Type":"OnOff", "Description":"State On/Off", "Value":"", "Range":"0;1", "Unit":"5" }, { "Id":0, "ServiceId":0, "Type":"Sketch", "Description":"Sketch Version", "Value":"", "Range":"*", "Unit":"4" }, { "Id":0, "ServiceId":0, "Type":"UpTime", "Description":"Accessory Uptime", "Value":"", "Range":"5000;3600000", "Unit":"2" } ]'
ACCESSORY_SERVICES='[ { "Id":0, "UniqId":"22876cfb-4f10-4b1b-a52b-f26ea4d9f098", "Type":"Temperature", "Description":"Temperature in degree Celsius", "Value":"", "Range":"-40;+50", "Unit":"3" }, { "Id":0, "UniqId":"78286ebc-3d78-4c2e-aea8-1d7dad5bc902", "Type":"Humidity", "Description":"Humidity i percentage", "Value":"", "Range":"0;100", "Unit":"1" }, { "Id":0, "UniqId":"b6bc6007-4212-4888-8ff7-2e8946a71b73", "Type":"OpenClose", "Description":"State Open/Closed", "Value":"", "Range":"0;1", "Unit":"5" }, { "Id":0, "UniqId":"5736337a-36a4-440d-8f13-6ee5d557bc1d", "Type":"OnOff", "Description":"State On/Off", "Value":"", "Range":"0;1", "Unit":"5" }, { "Id":0, "UniqId":"ebf0ce7c-eae7-4fdb-ada6-c47d589f79c6", "Type":"Sketch", "Description":"Sketch Version", "Value":"", "Range":"*", "Unit":"4" }, { "Id":0, "UniqId":"50f756b8-230c-4b08-a5d4-11ece5248cd3", "Type":"UpTime", "Description":"Accessory Uptime", "Value":"", "Range":"5000;3600000", "Unit":"2" } ]'


# SnakeConfig properties
SNAKECONFIG_VERSION="1.2.0"
APPLICATION_LIST="Swarm:Swarm,SnakeApi:SnakeApi,SnakeHistory:SnakeHistory,SnakeUtil:SnakeUtil,SnakeConfig:SnakeConfig,SnakeTimer:SnakeTimer,SnakeConsole:SnakeConsole"
ENVIRONMENT_LIST="Development:Development,Test:Test,Production:Production"
REDIS_SYNC_KEY="SEMSYNC"
REDIS_SYNC_PATH="/opt/containers"
COMPOSE_FILE_NAME="docker-compose.yml"
REPOSITORY_URL="https://github.com/jagdriver/Stacks"

# SnakeHistory properties
SNAKEHISTORY_VERSION="1.2.0"
HISTORY_DB_NAME="history"

# SnakeTimer properties
SNAKETIMER_VERSION="1.2.0"

# SnakeUtil properties
SNAKEUTIL_VERSION="1.2.0"

# SnakeConsole Server
SNAKE_CONSOLE_SERVER="consoleapi.wavesnake.local"

# Redis properties
REDIS_MASTER_SERVER_ADDRESS="redis.wavesnake.local"
REDIS_MASTER_SERVER_PORT="8214"
REDIS_REPLICA_SERVER_ADDRESS="redisreplica.wavesnake.local"
REDIS_REPLICA_SERVER_PORT="8214"

# Sketch properties
SKETCH_SERVER_ADDRESS="sketch.wavesnake.local"
SKETCH_SERVER_PORT="80"
SKETCH_BASE_DIR="Sketch"

# MQTT properties
MQTT_SERVER_ADDRESS="mqt.wavesnake.local"
MQTT_SERVER_PORT="8213"

# SQL properties
SQL_SERVER_ADDRESS="sql.wavesnake.local"
SQL_SERVER_PORT="8211"
SQL_DB_ADMIN="root"
SQL_USERS_DB_NAME="users"
SQL_HOMES_DB_NAME="homes"
SQL_COLLECTIONS_DB_NAME="collections"
SQL_TEMPLATE_DEFAULT="server={0}; port={1}; database={2}; user={3}; password={4}"
SQL_TEMPLATE_LOOKUP_USER="server={0}; port={1}; Uid={2}; Pwd={3}"
SQL_TEMPLATE_CREATE_USER="CREATE USER '{0}'@'%' IDENTIFIED BY '{1}';"
SQL_TEMPLATE_GRANT_PRIVILEGES="GRANT ALL PRIVILEGES ON {0}.* TO '{1}'@'%';"
SQL_TEMPLATE_FIND_USER="SELECT count(*) FROM mysql.user WHERE user = '{0}';"
SQL_TEMPLATE_GRANT_ALL_PRIVILEGES="GRANT ALL PRIVILEGES ON *.* TO '{0}'@'%' WITH GRANT OPTION;"

# Types 
RULE_TYPES="accessory,group"
ACCESSORY_TYPES="TempSensor,TempHumSensor,GateController,Relay,Switch,GasBurner"
SERVICE_TYPES="Temperature,Humidity,Sketch,UpTime,OpenClose,OnOff"
SKETCH_TYPES='[ { "Name":"WSTempSensor", "Board":"ESP8266-ESP12E-Module", "Version":"2.1.12", "BaseDir":"/sketches", "SketchBin":"wstempsensor.bin", "Description":"Temp & Humidity Sensor"}, {"Name":"WSTempSensor01", "Board":"ESP8266-ESP12E-Module", "Version":"2.1.12", "BaseDir":"/sketches", "SketchBin":"wstempsensor01.bin", "Description":"Temp Sensor"}, {"Name":"WSRelay01", "Board":"ESP8266-ESP12E-Module", "Version":"2.1.12", "BaseDir":"/sketches", "SketchBin":"wsrelay01.bin", "Description":"Latching Relay Switch"}, {"Name":"WSRelay02", "Board":"ESP8266-ESP12E-Module", "Version":"2.1.12", "BaseDir":"/sketches", "SketchBin":"wsrelay02.bin", "Description":"Non Latching Relay Switch"} ]'
UNIT_TYPES="byte,sbyte,short,ushort,int,uint,long,ulong,float,double"
BOARD_TYPES='[ {"ChipId":"1458376", "Model":"ESP8266-12F-DEVKIT-v3", "Vendor":"ShenZhen Doctors of Intelligence & Technology Co., Ltd", "Description":"Preferred Dev board" }, {"ChipId":"1458400","Model":"ESP8266-ESP12E-Module","Vendor":"AI-THINKER", "Description":"Preferred ESP Chip"}, {"ChipId":"99359","Model":"SparkFun-ESP8266-Thing-Dev","Vendor":"SparkFun", "Description":"Older Dev board" } ]'
SKETCH_RECORDS='[ {"Name":"WSTempSensor01", "Version":"1.2.1", "BaseDir":"Sketch", "SketchBin":"wstempsensor01.bin", "BoardId":2, "Description":"Temperature measurement & reporting, with attached Display"},    {"Name":"WSTempHumSensor01", "Version":"1.2.1", "BaseDir":"Sketch", "SketchBin":"wstemphumsensor01.bin", "BoardId":2, "Description":"Temperature & Humidity measurement & reporting, with attached Display"}, {"Name":"WSTempSensor", "Version":"1.2.1", "BaseDir":"Sketch", "SketchBin":"wstempsensor.bin", "BoardId":2, "Description":"Temperature measurement & reporting"}, {"Name":"WSTempHumSensor", "Version":"1.2.1", "BaseDir":"Sketch", "SketchBin":"wstemphumsensor.bin", "BoardId":2, "Description":"Temperature & Humidity measurement & reporting"}, {"Name":"WSGateSensor", "Version":"1.2.1", "BaseDir":"Sketch", "SketchBin":"wsgate.bin","BoardId":2, "Description":"Relay (NonLatching) for Open/Close Garage ports"}, {"Name":"WSGasBurner", "Version":"1.2.1", "BaseDir":"Sketch", "SketchBin":"wsgasburner.bin", "BoardId":2, "Description":"Relay (Latching) for switcing On/Off Gas Burner circulation pump"} ]'

# USB Drive mount Command (/dev/sda1: UUID="3FFB-6CC8")
USB_MOUNT_COMMAND='echo "/dev/disk/by-uuid/USB_UUID /media/data/mariadb vfat auto,nofail,noatime,users,rw,uid=manager,gid=manager 0 0" >> /etc/fstab'

# Zigbee2Mqtt properties
ZIGBEE_VENDOR="0451"
ZIGBEE_PRODUCT="16a8"
